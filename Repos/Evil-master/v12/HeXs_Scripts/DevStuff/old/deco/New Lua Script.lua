local SetViewAngles = _R.CUserCmd.SetViewAngleslocal clear = 0xFFFF - IN_JUMPlocal spinangle = Angle(0,0,0)local ucorrected = Angle(0,0,0)local ghostpos = nillocal function bcmove(cmd)		if state && angles!=Angle(0,0,0) then		local MouseFixUp = AimSmooth:GetFloat() != 0 and Angle(cmd:GetMouseY() * GetConVarNumber("m_pitch"), cmd:GetMouseX() * -GetConVarNumber("m_yaw")) or Angle(0,0,0)		angles = angles + MouseFixUp		angles.r=0		ucorrected = angles		ucorrected.p = math.NormalizeAngle(ucorrected.p)		ucorrected.y = math.NormalizeAngle(ucorrected.y)				if NoSpreadHere and (cmd:GetButtons() & IN_ATTACK > 0) then			local AntiSpread = PredictSpread(cmd,angles)			AntiSpread.p = math.NormalizeAngle(AntiSpread.p)			AntiSpread.y = math.NormalizeAngle(AntiSpread.y)						SetViewAngles(cmd,AntiSpread)		else			SetViewAngles(cmd,angles)		end			else			local correct = 1		if iZoom != 0 then			 correct = ( 1 - ( iZoom / 100 ) )		end				if !(IsValid(LocalPlayer():GetActiveWeapon()) && LocalPlayer():GetActiveWeapon():GetClass() == "weapon_physgun" && (cmd:GetButtons() & IN_USE) > 0) then			ucorrected.y = math.NormalizeAngle(ucorrected.y + (cmd:GetMouseX() * -0.022 * correct))			ucorrected.p = math.Clamp(ucorrected.p + (cmd:GetMouseY() * 0.022 * correct), -89, 90)		end				if ghostpos == nil then			if (cmd:GetButtons() & IN_ATTACK > 0) and not IsValid(LocalPlayer():GetVehicle()) then				if NoSpreadHere and alwaysnospread:GetBool() then					local ang = PredictSpread(cmd, ucorrected)					ang.p = math.NormalizeAngle(ang.p)					ang.y = math.NormalizeAngle(ang.y)										SetViewAngles(cmd, ang)				else					SetViewAngles(cmd, ucorrected)				end			else				SetViewAngles(cmd, ucorrected)			end		end	end	endhook.Add("CreateMove", "HEX3", bcmove)